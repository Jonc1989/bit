/// @param {Integer} $item-count - Number of items on the circle
/// @param {Length} $circle-size - Large circle size
/// @param {Length} $item-size - Single item size
@mixin on-circle($item-count, $circle-size, $item-size) {
  //position: relative;
  width:  $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%;
  list-style: none;

  > * {
    display: block;
    position: absolute;
    top:  50%;
    left: 50%;
    width:  $item-size;
    height: $item-size;
    margin: -($item-size / 2);

    $angle: (360 / $item-count);
    $rot: 0;

    @for $i from 1 through $item-count {
      &:nth-of-type(#{$i}) {
        transform:
                rotate($rot * 1deg)
                translate($circle-size / 2)
                rotate($rot * -1deg);
      }

      $rot: $rot + $angle;
    }
  }
}


// MIXINS
// Color Mixin
@mixin stat-bar($color-dark, $color-light, $direction, $dir-webkit) {
  background-color: #ffd334;
}
// Animation Mixin
@mixin bar-animation($time, $dimension) {
  visibility: hidden;
  @if $dimension == width {
    width: 0;
    -webkit-animation: animate-width;
    -moz-animation: animate-width;
    animation: animate-width;
  }
  @if $dimension == height {
    height: 0;
    -webkit-animation: animate-height;
    -moz-animation: animate-height;
    animation: animate-height;
  }
  animation-timing-function: cubic-bezier(.35,.95,.67,.99);
  -webkit-animation-timing-function: cubic-bezier(.35,.95,.67,.99);
  -moz-animation-timing-function: cubic-bezier(.35,.95,.67,.99);
  animation-duration: $time*2;
  -webkit-animation-duration: $time*2;
  -moz-animation-duration: $time*2;
  animation-fill-mode: forwards;
  -webkit-animation-fill-mode: forwards;
}